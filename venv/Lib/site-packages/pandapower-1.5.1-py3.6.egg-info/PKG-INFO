Metadata-Version: 1.1
Name: pandapower
Version: 1.5.1
Summary: Convenient Power System Modelling and Analysis based on PYPOWER and pandas
Home-page: http://www.uni-kassel.de/go/pandapower
Author: Leon Thurner, Alexander Scheidler
Author-email: leon.thurner@uni-kassel.de, alexander.scheidler@iee.fraunhofer.de
License: BSD
Description: =============
        pandapower
        =============
        
        .. image:: https://readthedocs.org/projects/pandapower/badge/
           :target: http://pandapower.readthedocs.io/
           :alt: Documentation Status
        
        .. image:: https://img.shields.io/pypi/v/pandapower.svg
           :target: https://pypi.python.org/pypi/pandapower
        
        .. image:: https://img.shields.io/pypi/pyversions/pandapower.svg
            :target: https://pypi.python.org/pypi/pandapower
        
        .. image:: https://travis-ci.org/lthurner/pandapower.svg?branch=master
            :target: https://travis-ci.org/lthurner/pandapower
        
        .. image:: https://codecov.io/github/lthurner/pandapower/coverage.svg?branch=master
           :target: https://codecov.io/github/lthurner/pandapower?branch=master
            
        .. image:: https://api.codacy.com/project/badge/Grade/5d749ed6772e47f6b84fb9afb83903d3
            :target: https://www.codacy.com/app/lthurner/pandapower?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=lthurner/pandapower&amp;utm_campaign=Badge_Grade
        
        .. image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg
            :target: https://github.com/lthurner/pandapower/blob/master/LICENSE
        
        pandapower combines the data analysis library `pandas <http://pandas.pydata.org>`_ and the power flow solver `PYPOWER <https://pypi.python.org/pypi/PYPOWER>`_ to create an easy to use network calculation program
        aimed at automation of analysis and optimization in power systems.
        
        pandapower is a joint development of the research group Energy Management and Power System Operation, University of Kassel and the Department for Distribution System
        Operation at the Fraunhofer Institute for Energy Economics and Energy System Technology (IEE), Kassel.
        
        .. image:: https://www.uni-kassel.de/eecs/fileadmin/datas/fb16/Fachgebiete/energiemanagement/e2n.png
            :target: https://www.uni-kassel.de/eecs/en/fachgebiete/e2n/home.html
            :width: 25em
        
        .. image:: https://www.uni-kassel.de/eecs/fileadmin/datas/fb16/Fachgebiete/energiemanagement/iee.png
            :target: https://www.iee.fraunhofer.de/en.html
            :width: 25em
        
        |
        
        Element Models
        ---------------
        
        pandapower is an element based network calculation tool that supports the following components:
        
        	- lines
        	- two-winding and three-winding transformers
        	- ideal bus-bus and bus-branch switches
        	- static generators
        	- ZIP loads
        	- shunts
        	- external grid connections
        	- synchronous generators
        	- DC lines
        	- unsymmetric impedances
        	- ward equivalents
        	
        Network Analysis
        ------------------
        
        pandapower supports the following network analysis functions:
        
        	- power flow
        	- optimal power flow
        	- state estimation
        	- short-circuit calculation according to IEC 60909
        	- topological graph searches
        
        For more information, please refer to the `documentation <https://pandapower.readthedocs.io>`_.
        
        Installation notes can be found `here <http://pandapower.readthedocs.io/en/latest/getting_started/installation.html>`_, for a comfortable introduction into pandapower see the `interactive tutorials <http://pandapower.readthedocs.io/en/develop/getting_started/tutorials.html>`_.
        
        If you are interested in getting release notes for new pandapower versions, please subscribe to the pandapower `mailing list <http://www.uni-kassel.de/go/pandapower>`_.
        
        There is a project to develop a GUI for pandapower: https://github.com/johaack/pandapower_gui - developers wanted!
        
        Citing pandapower
        ==================
        
        A paper describing pandapower has been accepted for publication in IEEE Transaction on Power Systems, a preprint of this paper is available on `arXiv <https://arxiv.org/abs/1709.06743>`_. Please acknowledge the usage of pandapower by citing the Paper as follows:
        
        - **L. Thurner, A. Scheidler, F. Sch√§fer et al**, `pandapower - an Open Source Python Tool for Convenient Modeling, Analysis and Optimization of Electric Power Systems <https://arxiv.org/abs/1709.06743>`_, IEEE Transactions on Power Systems, `DOI:10.1109/TPWRS.2018.2829021 <https://doi.org/10.1109/TPWRS.2018.2829021>`_, 2018.
        
        You can use the following BibTex entry: ::
        
        	@ARTICLE{pandapower.2018,
        	author={L. Thurner and A. Scheidler and F. Schafer and J. H. Menke and J. Dollichon and F. Meier and S. Meinecke and M. Braun},
        	journal={IEEE Transactions on Power Systems},
        	title={pandapower - an Open Source Python Tool for Convenient Modeling, Analysis and Optimization of Electric Power Systems},
        	year={2018},
        	doi={10.1109/TPWRS.2018.2829021},
        	url={https://arxiv.org/abs/1709.06743},
        	ISSN={0885-8950}
        	}
        
        
        
        Change Log
        =============
        
        [1.5.1] - 2018-05-04
        ----------------------
        - [FIXED] delta-wye transformation for 3W-transformers #54
        - [ADDED] bus-bus switches collection #76
        - [FIXED] some broken documentation links
        
        [1.5.0] - 2018-04-25
        ----------------------
        - [FIXED] plotly hover function for edges (only if use_line_geodata == False)
        - [FIXED] from_ppc trafo parameter calculation now also considers baseMVA != 100
        - [CHANGED] update create_collection docstrings
        - [CHANGED] update HV/MV transformer standard type data
        - [ADDED] pp_elements() toolbox function
        - [ADDED] new parameter g_us_per_km to model dielectric losses in lines
        - [ADDED] single phase short-circuit calculation with negative sequence models
        - [ADDED] generic storage model (sgen/load like element with negative / positive power allowed)
        - [ADDED] modelling of the complex (voltage magnitude and angle) tap changer for cross control
        - [ADDED] modelling of the tap changer of a 3-winding transformer at star point or terminals
        - [ADDED] losses of 3W transformers can be modeled at star point, HV, MV or LV side
        
        [1.4.3] - 2018-02-06
        ----------------------
        - [CHANGED] change of collection function names
        - [ADDED] sgen collections and ration functionality for sgen and load collections
        - [ADDED] cosphi_from_pq toolbox function
        - [ADDED] create_nxgraph: respect_switches includes transformer switches
        
        [1.4.2] - 2017-12-05
        ----------------------
        - [ADDED] compatbility with networkx 2.0 (see #82)
        - [ADDED] compatibility with pandas 0.21 (see #83)
        - [CHANGED] implementation of ZIP loads changed to constant current magnitude paradigm (see #62)
        - [ADDED] max_step parameter for shunt
        - [ADDED] added warning for large bus index values
        - [FIXED] bug in short-circuit results of trafo3w
        - [FIXED] bugfix in find_bridges and refactoring
        - [CHANGED] faster implementation of result cleanup
        - [CHANGED] faster implementation of line index handling in power flow
        - [FIXED] bug in plotly label display (#75)
        - [ADDED] several fixes, extensions, tests for toolbox
        - [ADDED] additional MV line standard types
        - [FIXED] kerber extrem vorstadtnetz mv bus voltage
        - [FIXED] removed incorrect estimation result tables for load, sgen, gen
        
        [1.4.1] - 2017-09-19
        ----------------------
        - [FIXED] ZIP load issue that led to incorrect calculation of I part with voltage angle shifts
        - [FIXED] Bug that set voltage constraints to 0.9/1.2 if no voltage constraints was given in OPF
        - [ADDED] possibility to access J matrix after power flow
        - [ADDED] opf cost conversion
        - [ADDED] opf costs in power system test cases
        
        [1.4.0] - 2017-07-27
        ----------------------
        
        - [ADDED] possibility to save networks to an sql database
        - [CAHNGED] major change in fileIO: all networks are converted to a uniform dataframe only version before they are saved as excel, json or sql. Old files can still be loaded, but all files saved with v1.4 can only be loaded with v1.4!
        - [FIXED] all tests now pass if numba is not installed (although pandapower might be slow without numba)
        - [FIXED] state estimation bug with phase shift transformers
        - [CHANGED] OPF now raises specific warning if parameters are missing instead of generic exception
        - [ADDED] geographical data for cigre and IEEE case networks
        - [ADDED] Dickert LV Networks
        
        [1.3.1] - 2017-06-16
        ----------------------
        - [CHANGED] to_pickle saves only python datatypes and no pickle objects
        - [ADDED] html representation of pandapower nets
        - [ADDED] collections for trafos, loads, ext_grids
        - [CHANGED] renamed create_shunt_as_condensator to create_shunt_as_capacitor
        - [FIXED] mock problem in create docstrings
        - [ADDED] Synthetic Voltage Control LV Networks
        
        [1.3.0] - 2017-05-10
        ----------------------
        - [ADDED] ZIP loads integrated in power flow
        - [ADDED] numba implementation of dissolving switch buses
        - [ADDED] Current source representation of full converter elements in short circuit calculations
        - [ADDED] Method C for calculation of factor kappa in short circuit calculation
        - [CHANGED] Speedup for calculation of branch short circuit currents
        - [CHANGED] Branch results for minimum short circuit calculations are calculated as minimal currents
        - [ADDED] Interactive plots with plotly
        - [CHANGED] included pypower files for power flow and index files
        - [FIXED] compatibility with numpy 1.12
        - [CHANGED] -1 is a valid value for net.bus_geodata.x
        - [CHANGED] allow transformers with negative xk to provide large scale IEEE cases (RTE, PEGASE, Polish)
        - [ADDED] large scale IEEE cases (RTE, PEGASE, Polish)
        - [ADDED] rated voltage and step variable for shunts
        - [ADDED] lagrange multiplier included in bus results after OPF
        
        [1.2.2] - 2017-03-22
        --------------------
        - [CHANGED] Minor refactoring in pd2ppc
        - [ADDED] Technical Report
        
        [1.2.1] - 2017-03-21
        --------------------
        - [FIXED] Readme for PyPi
        
        [1.2.0] - 2017-03-21
        --------------------
        - [CHANGED] net.line.imax_ka to net.line.max_i_ka for consistency reasons
        - [ADDED] net.line.tp_st_degree for phase shift in trafo tap changers
        - [ADDED] sn_kva parameter in create_empty network for per unit system reference power
        - [ADDED] parameter parallel for trafo element
        - [ADDED] connectivity check for power flow to deal with disconnected network areas
        - [ADDED] backward/forward sweep power flow algorithm specially suited for radial and weakly-meshed networks
        - [ADDED] linear piece wise and polynomial OPF cost functions
        - [ADDED] possibility to make loads controllable in OPF
        - [ADDED] to_json and from_json functions to save/load networks with a JSON format
        - [ADDED] generator lookup to allow multiple generators at one bus
        - [CHANGED] Initialization of calculate_voltage_angles and init for high voltage networks
        - [ADDED] bad data detection for state estimation
        - [CHANGED] from_ppc: no detect_trafo anymore, several gen at each node possible
        - [CHANGED] validate_from_ppc: improved validation behaviour by means of duplicated gen and branch rearangement
        - [ADDED] networks: case33bw, case118, case300, case1354pegase, case2869pegase, case9241pegase, GBreducednetwork, GBnetwork, iceland, cigre_network_mv with_der='all' der
        - [ADDED] possibility to add fault impedance for short-circuit current calculation
        - [ADDED] branch results for short circuits
        - [ADDED] static generator model for short circuits
        - [ADDED] three winding transformer model for short circuits
        - [FIXED] correctly neglecting shunts and tap changer position for short-circuits
        - [ADDED] two phase short-circuit current calculation
        - [ADDED] tests for short circuit currents with validation against DIgSILENT PowerFactory
        
        
        [1.1.1] - 2017-01-12
        ----------------------
        - [ADDED] installation description and pypi files from github
        - [ADDED] automatic inversion of active power limits in convert format to account for convention change in version 1.1.0
        - [CHANGED] install_requires in setup.py
        
        
        [1.1.0] - 2017-01-11
        ----------------------
        - [ADDED] impedance element can now be used with unsymetric impedances zij != zji
        - [ADDED] dcline element that allows modelling DC lines in PF and OPF
        - [ADDED] simple plotting function: call pp.simple_plot(net) to directly plot the network
        - [ADDED] measurement table for networks. Enables the definition of measurements for real-time simulations.
        - [ADDED] estimation module, which provides state estimation functionality with weighted least squares algorithm
        - [ADDED] shortcircuit module in beta version for short-circuit calculation according to IEC-60909
        - [ADDED] documentation of model validation and tests
        - [ADDED] case14, case24_ieee_rts, case39, case57 networks
        - [ADDED] mpc and ppc converter
        - [CHANGED] convention for active power limits of generators. Generator with max. feed in of 50kW before: p_min_kw=0, p_max_kw=-50. Now p_max_kw=0, p_min_kw=50
        - [ADDED] DC power flow function pp.rundcopp
        - [FIXED] bug in create_transformer function for tp_pos parameter
        - [FIXED] bug in voltage ratio for low voltage side tap changers
        - [FIXED] bug in rated voltage calculation for opf line constraints
        
        [1.0.2] - 2016-11-30
        ----------------------
        
        - [CHANGED] changed in_service dtype from f8 to bool for shunt, ward, xward
        - [CHANGED] included i_from_ka and i_to_ka in net.res_line
        - [ADDED] recycle parameter added. ppc, Ybus, _is_elements and bus_lookup can be reused between multiple powerflows if recycle["ppc"] == True, ppc values (P,Q,V) only get updated.
        - [FIXED] OPF bugfixes: cost scaling, correct calculation of res_bus.p_kw for sgens
        - [ADDED] loadcase added as pypower_extension since unnecessary deepcopies were removed
        - [CHANGED] supress warnings parameter removed from loadflow, casting warnings are automatically supressed
        
        [1.0.1] - 2016-11-09
        ----------------------
        
        - [CHANGED] update short introduction example to include transformer
        - [CHANGED] included pypower in setup.py requirements (only pypower, not numpy, scipy etc.)
        - [CHANGED] mpc / ppc renamed to ppci / ppc
        - [FIXED] MANIFEST.ini includes all relevant doc files and exclude report
        - [FIXED] handling of tp_pos parameter in create_trafo and create_trafo3w
        - [FIXED] init="result" for open bus-line switches
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Scientific/Engineering
